plugins {
    id "com.gradle.plugin-publish" version "1.2.1"
    id 'maven-publish' // required to generate correct meta data
}

apply from: '../jacoco.gradle'

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":gver-dsl")
    implementation "org.dmfs:semver:1.0.0"
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.7.0.202309050840-r'
    implementation 'org.dmfs:srcless-annotations:0.6.0'
    implementation 'org.dmfs:jems2:2.23.1'
    annotationProcessor 'org.dmfs:srcless-processors:0.6.0'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0-M2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0-M2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
    testImplementation 'org.dmfs:jems2-testing:2.23.1'
    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation 'org.dmfs:jems2-confidence:2.23.1'
    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation 'org.saynotobugs:confidence-core:0.45.1'
    testImplementation 'org.saynotobugs:confidence-incubator:0.45.1'
    testImplementation 'org.saynotobugs:confidence-test:0.45.1'
    testAnnotationProcessor 'org.dmfs:srcless-processors:0.6.0'
}

test {
    useJUnitPlatform()
}

gradlePlugin {
    website = 'https://github.com/dmfs/gver'
    vcsUrl = 'https://github.com/dmfs/gver'
    plugins {
        gverPlugin {
            id = 'org.dmfs.gver'
            implementationClass = 'org.dmfs.gradle.gver.GitVersionPlugin'
            displayName = 'gver plugin'
            description = 'Gradle versioning based on git history.' +
                    'This plugin was formerly published with the ID org.dmfs.gitversion.'
            tags = ['semver', 'tag', 'git', 'version', 'semantic-versioning', 'semantic']
        }
    }
}

gradle.taskGraph.whenReady {
    tasks.withType(PublishToMavenRepository) { PublishToMavenRepository t ->
        if (t.repository == null) {
            logger.info("Task `{}` had null repository", t.path)
        } else if (t.repository.name == "sonatype") {
            logger.lifecycle("Disabling task `{}` because it publishes to Sonatype", t.path)
            t.enabled = false
        }
    }
}